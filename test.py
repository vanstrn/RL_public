import numpy as np
import random
import matplotlib.pyplot as plt


def SmoothOption_v2(option, gamma =0.9):
    """Assuming an Orthoganally connected grid structure smooth all values in it.
    Assuming that the values of the array are non-zero except when """
    shape = option.shape
    size = shape[0]*shape[1]
    #Create W
    w=option.flatten()

    #Create the Adjacency Matric
    x = np.zeros((size,size))
    for i,value in enumerate(w):
        if value == 0:
            x[i,i] = 1
        else:
            sum=0
            if w[i-1] != 0:
                x[i,i-1] = 0.25
                sum+=0.25
            if w[i+1] != 0:
                x[i,i+1] = 0.25
                sum+=0.25
            if w[i-shape[0]] != 0:
                x[i,i-shape[0]] = 0.25
                sum+=0.25
            if w[i+shape[0]] != 0:
                x[i,i+shape[0]] = 0.25
                sum+=0.25

            x[i,i] = 1 - sum


    # (I-gamma*Q)^-1
    I = np.identity(size)
    psi = np.linalg.inv(I-gamma*x)
    value = np.matmul(psi,w)

    smoothedOption = np.reshape(value,shape)

    return smoothedOption



grid = np.array([   [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 1.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 1.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0,   0,   0,   0,   0, 0.1,   0,   0,   0,   0,   0,   0,   0,   0, 0.1,   0,   0,   0, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 1.1, 0.1,   0, 0.1, 0.1, 1.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1,   0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0],
                    [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 0],
                    ])

out = SmoothOption_v2(grid)

imgplot = plt.imshow(out)
plt.show()
